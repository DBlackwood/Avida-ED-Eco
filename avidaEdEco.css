/*one data tap of population page */
/*
  {
    box-sizing: border-box;  /* include padding and border in the elements width/size */
  }
*/
  body {
    margin: 0;
    background: #F5F5F5; /* cyan; */
    padding: 0;
  }
  .displayNone{
    display: none;
  }
  .thin{
    margin: 0;
    padding: 0;
  }
  
  #popInfoTabHolder {
    width: 100%;
  }
  .tabHolderShow {
    flex: 0 0 auto;
    display: block;
  }
  .tabHolderHide {
    background: beige;
    flex: 0 0 auto;
    display: none;
  }
  
.tab {
  overflow: hidden;
  /*border: 1px solid #ccc; */
  border: none;
  background: inherit;
  /* float: right; */
}

/* Style the buttons inside the tab */
.tab button {
  background: white;
  float: left;
  border: 1px black;
  border-style: solid solid none;
  border-radius: 9px 9px 0px 0px;
  outline: none;
  cursor: pointer;
  padding: 2px 9px;   
  transition: 0.3s;
  font-size: 11px;
  margin-top: 5px;
}

/* Change background color of buttons on hover */
.tab button:hover {
  background: #ddd;
}

/* Create an active/current tablink class */
.tab button.active {
  background: #ccc;
}
  
  .all2lft{
    display: grid;
    grid-template-rows: 2.5em auto;
    grid-template-columns: 240px auto;
    grid-template-areas: 'headerRow headerRow'
                          'navColClass mainBlockHolder';
    height: 100vh;
    width: 100vw;
    max-height: 100vh;
    max-width: 100vw;
    min-height: 100vh;
    min-width: 100vw;
    margin: 0;
    background:  #F5F5F5;   /* lightsalmon;  */
  }
 .all2rit{
    display: grid;
    grid-template-rows: 2.5em auto;
    grid-template-columns: auto 250px;
    grid-template-areas: 'headerRow headerRow'
                         'mainBlockHolder rightInfoHolder';
    height: 100vh;
    width: 100vw;
    min-height: 100vh;
    min-width: 100vw;
    max-height: 100vh;
    max-width: 100vw;
    margin: 0;
    background:  #F5F5F5;   /* lightsalmon;  */
  }
 .all3org{
    display: grid;
    grid-template-rows: 2.5em auto;
    grid-template-columns: 240px auto 250px;    /* 250px */
    grid-template-areas: 'headerRow headerRow headerRow'
                          'navColClass mainBlockHolder rightInfoHolder';
    height: 100vh;
    width: 100vw;
    min-height: 98vh;
    min-width: 100vw;
    max-height: 100vh;
    max-width: 99vw;
    margin: 0;
    background:  #F5F5F5;   /* lightsalmon;  */
  }

  .all3pop{
    display: grid;
    grid-template-rows: 2.5em auto;
    grid-template-columns: 240px auto 440px;    /* 440px */
    grid-template-areas: 'headerRow headerRow headerRow'
                          'navColClass mainBlockHolder rightInfoHolder';
    height: 100vh;
    width: 100vw;
    min-height: 98vh;
    min-width: 100vw;
    max-height: 99vh;
    max-width: 100vw;
    margin: 0;
    background:  #F5F5F5;   /* lightsalmon;  */
  }
  .headerRow {
    grid-area:headerRow;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    border: 1px solid #AAA;               /* #AAA; */
  }
  
  .navColClass {
    grid-area:navColClass;
    place-self: stretch;
    min-width: 240px;        /*was 152   340px*/
    display: flex;
    flex-direction: column;
    background: #F5F5F5; /* lavender; */
    border: 1px solid #AAA;
    hight: 100%;
    resize: horizontal;
    overflow:scroll;
  }

/*contains pages (population, Organsims, Analysis) */
.mainBlockHolder{
    grid-area:mainBlockHolder;
    align-self: stretch;
    background: #F5F5F5;     /* lightskyblue; */
    height: 100%;
    width: 100%;
    border: 1px solid #AAA;
  }
  .footerRow {
    border: 1px solid #AAA;
  }

  #rightInfoHolder {
    grid-area: rightInfoHolder;
    border: 1px solid #AAA;      /*sot stat = 190;  popstat =234  for  424 */
    background: #F5F5F5;
    height: 100%;
    overflow:scroll;
  }
  #popInfoVert {
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  #orgInfoHolder {
    border: 1px solid #AAA;
    background: #F5F5F5;
    padding: 5px;
    height: 100%;
    width: 100%;
  }
  

/* structures in the headerRow */  
.leftPnlBtnHlderShow{
    background: #eee;     /* #eee; better color ? */
    flex: 0 1 50px;
    padding: 2px 4px 2px 6px;    /* top right bottom left */
    visibility: visible;
  }
.pnlBtnHldrHide{
    flex: 0 1 50px;
    padding: 2px 6px 2px 4px;    /* top right bottom left */  
  visibility: hidden;    
}
.ritePnlBtnHlderShow{
    flex: 0 1 50px;
    padding: 2px 6px 2px 4px;    /* top right bottom left */  
    visibility: visible;
}
  #lftPnlButtonImg{
    height: 20px;
    border: 2px solid black;  
    alt: 'button to open/close left panel'; 
    float: left;
  }
  #rtPnlButtonImg{
    height: 20px;
    border: 2px solid black;  
    alt: 'button to open/close right panel'; 
    float: right;
  }
  #mainMenu{
    flex: 0 1 350px;
    height: 2.5em;
  }
  #headerMsg{
    flex: 1 1 auto;                 /* fills remaining space; {flex:1 1 auto;} is the same as {}flex:1;} both prevent resize */
  }
  #msgHolder {
    padding: 4px 4px 4px 8px;    /* top right bottom left */   
    height: 100%;
  }
  #wsSavedMsg{
    color: blue;
  }
  /* not used as of 2020 July 23 
  #RtSideSelectHolder{
    height: 20px;
    margin: auto;
  }
  */
  #RtSideToggleButtons{
    height: 20px;
    margin: auto;
  }
  
/* structures in the left side panel */
  .mainPageButtons{
    border: 1px solid #AAA;
    width: 100%;
    flex:0 1 112px;
  }
  .PageButtonHolder {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
  }
  .pageImgDiv{
    flex: 0 1 60px;
    padding: 1px 15px;
  }
  .pageButtonImg{
    width: 32px;
    height: 32px;
  }
  .pageButtonDiv{
    flex: 0 1 auto;
    padding: 1px 1px;     /* top right bottom left  */   /*top left/right bottom */ /*top/bottom  left/right */
  }
  .pageButton {
    font-size: 13px;
    padding:4px 8px;
    border-radius: 5px;
    min-width: 82px;
  }
.freezerClass{
  border: 1px solid #BABABA;
  flex: 1;                /* fills remaining space; flex:1 1 auto; is the same as flex:1; both prevent resize */
  overflow:scroll;
  height: 100%;
  width: 100%;
  overflow:scroll;
}
#FreezerTitle {
  font-size: 190%;
  text-align:  center;
  font-style: normal;
  width: 100%;
}
.frzAccordion {
  width: 100%;
}
.freezerSummaryClass{
  font-size: 130%;
  background: #EEE;      /* was #EEE; */
  width: 100%;
}
.freezerContainer {
  padding-left: 10px;
}
/* trash area below freezer */
#trashCan { 
  grid-area: trashCan;
  align-self: stretch;
  justify-self: stretch;
}
#showTextDebugButtonDiv { 
  grid-area: showTextDebugButtonDiv;
  align-self: stretch;
  justify-self: stretch;
  display: flex;
  align-items: center;
  justify-content: flex-end;
}
#developmentToggleDiv { 
  grid-area: developmentToggleDiv;
  align-self: stretch;
  justify-self: stretch;
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

.trash-grid-container{
  display: grid;
  grid-template-areas: 'trashCan showTextDebugButtonDiv '
                       'trashCan developmentToggleDiv';
  align-items: center;   /* up down */
  grid-template-columns: auto auto;
  grid-template-rows: 50% 50%;
  grid-column-gap: 1px;
  grid-row-gap: 1px;
  width: 100%;
  flex: 0 1 40px;
  border: 1px solid #AAA;
}
#showTextDebugButton{
  min-width: 60px;
}
#developmentToggle{
  min-width: 60px;
}
.devoShow {
  background: inherit;
  color: black;
}
.devoCammo {        /* #notation with 4 or 8 chars should have opacity as the last section should work, but NetBeans does not like it*/  
  border: none;                             /* #F5F5F500 should work, but net beans does not like it so some browsers might not like it */
  background-color: rgba(245,245,245,0);    /*  rgba(245,245,245,0)  is #F5F5F5 with opacity set to 0.0;   */  
  color: rgba(245,245,245,0);               /* 0.0 (fully transparent) to 1.0 (fully opaque); */
  
}

.mainBlockClassRow {
  display: flex;
  flex-direction: row;
  height: 99%;
  width: 100%;
  background: #F5F5F5; /* #F5F5F5;lightblue; */
}
  .orgBenchCol{
    background: #F5F5F5; /* lightgoldenrodyellow;*/
    flex: 1;                 /* fills remaining space; {flex:1 1 auto;} is the same as {}flex:1;} both prevent resize */
    border: 1px solid #AAA;
    display: flex;
    flex-direction: column;
    width: 100%;
  }

.popBenchCol{
  background: #F5F5F5; /* lightgoldenrodyellow; */
  flex: 1;                 /* fills remaining space; {flex:1 1 auto;} is the same as {}flex:1;} both prevent resize */ 
  //flex: 0 1 auto;       //should scale with window size, but does not do what I want????
  border: 1px solid #AAA;
  display: flex;
  overflow:auto;
  flex-direction: column;
  width: 100%;
  max-height: 100%;
  overflow:scroll;
  /*max-width: 430px;   /* tiba; temp fix will need to change this later */
}

.benchPopTopRow {
  flex:0 1 30px;
  display: flex;
  flex-direction: row;
  justify-content:space-between;
  background: #F5F5F5; /* lightblue;  */
  border: 1px solid #AAA;
}
#activeConfigHolder{
  flex: 0 1 auto;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
}

#popTopDishIcon{
  flex: 0 1 58px;
}
#activeConfig {
  flex: 0 1 120px;
  padding-top: 5px;
}
#testConfigLableHolder {
  margin: 4px;
  flex: 0 1 40px;
}
#testConfig {
  flex: 0 1 80px;
}
.activeConfigDojoDNDcontainer {
  min-height: 30px;
  min-width: 6em;
  border: 1px solid #CCCCCC;
  display: inline-block;
  overflow: visible;
}
#popTopMsgSpace {
  flex: 1 1 auto;          /* fills remaining space; {flex:1 1 auto;} is the same as {}flex:1;} both prevent resize */
  text-align: left;
  padding-left: 4px;
  margin: auto;
}

.benchPopMid {
  border: 1px solid #AAA;
  flex: 1;                 /* fills remaining space; {flex:1 1 auto;} is the same as {}flex:1;} both prevent resize */
  background: #F5F5F5; /* blue; */
  overflow:auto;
}
#gridHolder {
    min-width: 200px;
    overflow: auto;
    margin: 0px;
    padding: 3px;
    background: darkgrey;
}
.scaleCanvasHolderClass { 
  flex: 0 1 20px;
  min-height: 30px;
  grid-area: scaleCanvas; 
  width: 100%
}

.scaleCanvasClass {
  width: 100%;
  height: 30px;
  border: 1px solid #DDDDDD;
}
.benchPopBot{
  flex: 0 1 60px;
  border: 1px solid #AAA;
  min-height: 41px;
  overflow: auto;
  background: #F5F5F5; /* peachpuff;*/
}
  .zoomSlideClass { grid-area: zoomSlide; visibility: hidden; }
  .timeUpdateClass { grid-area: timeUpdate;}
  .freezeButtonDivClass { grid-area: freezeButton;}
  .modeHolderClass { grid-area: modeHolder;}
  .gridButtonClass { grid-area: gridButton;}
  .rescalingClass { grid-area: rescaling;}
  .popBotRiteClas { grid-area: popBotRite;}
  .gridControlContainerClass{
  display: grid;
  grid-template-areas: 'timeUpdate  modeHolder  rescaling'
                       'freezeButton gridButton popBotRite';
  width: 100%;
}

/* right informaton pannel on the populatoin page is all held by popInfoVert which is in #rightInfoHolder */

  .labInfoHolder {
    flex: 1;                 /* fills remaining space; {flex:1 1 auto;} is the same as {}flex:1;} both prevent resize */ 
    height: 100%;
  }
    
  #popStatsBlock{
    flex-direction: column;
    height: 100%;
  }
  .labInfoClass{
    background: #F5F5F5; /* lightsteelblue; */
    height: 100%;
  }
  
  .labInfoNone{
    display: none;
  }

  .labInfoFlex{
    display: flex;
    flex-direction: column;
  }
  
  #environConfigEdit{
    resize: both;
    overflow: auto;
  }

  #popStatHolder{
    flex: 1 1 280px;
    min-height: 280px;
  }
  #popStatistics{
    display: flex;
    flex-direction: row;
    border: 1px solid #AAA;
    background: #F5F5F5;
    height: 280px;
    resize: vertical;
    overflow: auto;
  }
  #selOrgType{
    flex: 0 1 190px;        /*was 170 */
    border: 1px solid #AAA;
/*    resize: horizontal;  */
    overflow: auto;
  }
  #popStats4grid{
    flex: 1 1 auto;        /* fills remaining space; {flex:1 1 auto;} is the same as {}flex:1;} both prevent resize */
    border: 1px solid #AAA;
  }
  #popChrtHolder{
    flex: 1 1 auto;        /* fills remaining space; {flex:1 1 auto;} is the same as {}flex:1;} both prevent resize */
    border: 1px solid #AAA;
    height: 100%;
  }
  #miniChartYaxis{
    flex: 0 0 60px;
    border: 1px solid #AAA;
  }

  #displayGridResourceData{
    display: flex;
    flex: 0 0 auto;
    border: 1px solid #AAA;
    width: 100%;
  }
  
.grid-currentSugarAmount-container {   /*on stats tab of population page */
  display: inline-grid;
  grid-template-columns: auto auto auto auto auto auto auto auto auto auto;
  background: #F5F5F5;     /* #2196F3;  blue */
/*  justify-content: space-evenly;  */
  width: 100%;
}

.grid-currentSugarAmount-item {          /*on data tab of population page */
  background: rgba(255, 255, 255, 0.8);
  border: 1px solid rgba(0, 0, 0, 0.8);
  text-align: center;
  padding: 2px 3px;
}

#environmentSettingTitle{
  font-size: 130%;
}
.enviroSubHeading {
  display: inline;
  font-size: 120%;
}

.mutePopInputClass{
  width:4em; 
  height:1em;
  margin: 0px 2px;     /* top right bottom left  */   /*top left/right bottom */ /*top/bottom  left/right */
  /* padding: 0px 0px;   /* top right bottom left  */  /* box padding border margin outside now */
  display: inline-block; 
  /*background: yellow; */
}
.mutePopSlideClass{
  width:360px; 
  display: block; 
  vertical-align: top; 
  margin-left:10px; 
  margin-right:20px
}
/*************************************************************************** Sugar Accordion using details and select */

/* Header and controls that change all tasks are here.   /*  background: inherit */
/* inherit */
/* #sugarHeaderTitle { grid-area: headerTitle; justify: start ; background: #CCC; font-size: 120%;}   /* may not need or want */

#sugarSetTitle { grid-area:setTitle; justify-self: center; background: inherit; font-size: 110%; }
#allSugarGeometryDiv { grid-area:geometryDiv ; justify-self: center; }
#allSugarSupplyTypeDiv { grid-area:supplyTypeDiv ; justify-self: center; }
#allSugarRegionLayoutDiv { grid-area:regionLayoutDiv; justify-self: center; }
#allSugarDiffusionDiv  { grid-area:diffusionDiv; justify-self: center; }
#allSugarDetailsDiv { grid-area:detailDiv; justify-self: lefts; }

#geometrySgr { grid-area:geometrySgr; justify-self: center; background: inherit;}
#supplyTypeSgr { grid-area:supplyTypeSgr; justify-self: center; background: inherit;}
#regionLayoutSgr { grid-area:regionLayoutSgr; justify-self: center; background: inherit;}
#diffusionSgr { grid-area:diffusionSgr; justify-self: center; background: inherit;}
#showHideSgr { grid-area:showHideSgr; justify-self: right; background: inherit;}

#allSgr4Blnk { grid-area: allSgr3Blnk; }
#allSgr4Blnk { grid-area: allSgr4Blnk; }
#allSgr5Blnk { grid-area: allSgr5Blnk; }

.changeAllSugarsTogetherContainer {
  display: grid;
  grid-template-areas: 'setTitle    setTitle      showHideSgr     detailDiv'
                       'geometrySgr supplyTypeSgr regionLayoutSgr diffusionSgr'
                       'geometryDiv supplyTypeDiv  regionLayoutDiv diffusionDiv';
  /*
  grid-template-areas: 'setTitle     headerTitle headerTitle   allSgr5Blnk'
                       'allSgr4Blnk  geometrySgr supplyTypeSgr showHideSgr'
                       'allSgr4Blnk  geometryDiv supplyType  detailDiv';

  grid-template-areas: 'setTitle  geometrySgr supplyTypeSgr showHideSgr'
                       'setTitle  geometryDiv supplyType  detailDiv';
  */
  width: 100%;
  /* grid-template-columns: 20% 25% 30% 25%;
    grid-template-rows: 33fr 33fr 33fr; */
  grid-column-gap: 0px;
  grid-row-gap: 0px;
  background: #AAA;   /* #DDD; */
}

.changeAllSugarsTogetherNoGlobalContainer {
  display: grid;
  grid-template-areas: ' setTitle      showHideSgr     detailDiv'
                       ' supplyTypeSgr regionLayoutSgr diffusionSgr'
                       ' supplyTypeDiv regionLayoutDiv diffusionDiv';
  /*
  grid-template-areas: 'setTitle     headerTitle headerTitle   allSgr5Blnk'
                       'allSgr4Blnk  geometrySgr supplyTypeSgr showHideSgr'
                       'allSgr4Blnk  geometryDiv supplyType  detailDiv';

  grid-template-areas: 'setTitle  geometrySgr supplyTypeSgr showHideSgr'
                       'setTitle  geometryDiv supplyType  detailDiv';
  */
  width: 100%;
  /* grid-template-columns: 20% 25% 30% 25%;
    grid-template-rows: 33fr 33fr 33fr; */
  grid-column-gap: 0px;
  grid-row-gap: 0px;
  background: #AAA;   /* #DDD; */
}



/* not in current use
                    <div id='allSgr3Blnk'>&nbsp;&nbsp;&nbsp;</div>
                    <div id='allSgr4Blnk'>&nbsp;&nbsp;&nbsp;&nbsp;</div>
                    <div id='allSgr5Blnk'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
*/
/* Accodion using details/summary and hidden sections also defined here; one detail/summary for each logic task = surgar type */

#sugarAccordion{
  width: 100%;
}
.sugarAccordionSection{
  width: 100%;
  border-bottom: 1px solid #222;   /* #000 is black  */
  display: inline-block;
}
.sugarSummary{
  background: rgba(128, 128, 128, 0.0); 
  min-height: 20px;
  width: 100%;
}

.geometryClass{
  display: inline-block
}

.groupDebug{  display: inline; }
.grooupFinite { display: inline; }
.groupChemostat { display: inline; }

.globalFinite { display: inline; }
.globalChemostat { display: inline; }
.globalDebug { display:inline; }

.localChemostat { display: inline; }
.localDebug { display:inline; }

.HalfLftRit{
  display: inline-block;  
}
.TopLftRit{
  display: inline-block;  
}
.Quarters{
  display: inline-block;  
}

/*  might not work; need away to replace one debug class with the other without chainging the other classes */
.debugInlineBlock{
  display:inline-block;
}
.debugNone{
  display: none;
}

.sugarDetailSection{
  background: rgba(255, 255, 255, 0.0);   
}
.dishPartLabel{
  font-size: 100%;
  font-weight: bold;
  color: #444;
}
.sugarSummarySpan{
  display: inline-block;
}
.sugPeriodNclass{
  width: 3.5em; height:1.5em;
}
.sugInitialNclass{
  width: 4em; height:1.5em;
}
.sugInitialHiNclass{
  width: 4em; height:1.5em;
}
.sugInitialLoNclass{
  width: 4em; height:1.5em;
}
.sugInflowHiNclass{
  width: 3.5em; height:1.5em;
}
.sugInflowLoNclass{
  width: 3.5em; height:1.5em;
}
.sugOutflowHiNclass{
  width: 3.5em; height:1.5em;
}
.sugOutflowLoNclass{
  width: 3.5em; height:1.5em;
}
/*   Not in use as of 2020 july 22
#notSection{
  background: rgba(255,153,178, 1);  /* bigger number is closer to white; 0,0,0 is black
}
#nanSection{
  background: rgba(255,204,153, 1);
}
#andSection{
  background: rgba(255,255,153, 1);
}
#ornSection{
  background: rgba(153,255,153, 1);
}
#oroSection{-sugarDetail-chemostat-container
  background: rgba(153,255,153, 1);
}
#antSection{
  background: rgba(153,255,153, 1);
}
#norSection{
  background: rgba(153,255,153, 1);
}
#xorSection{
  background: rgba(153,255,153, 1);
}
#equSection{
  background: rgba(153,255,153, 1);
}
/****************************************** layout for header area for Resource controls in Setup for Population Page */
/* 
    Deal with these later: now sure what we want yet.
#sugarRewardStr { grid-area: rewardstr; }
#sugarReward02x { grid-area: reward02x; }
#sugarReward04x { grid-area: reward04x; }
#sugarReward08x { grid-area: reward08x; }
#sugarReward16x { grid-area: reward16x; }
#sugarReward32x { grid-area: reward32x; }
                          <div id='sugarRewardStr'>(strength of energy reward shown in parentheses)</div>
                          <div id='sugarReward02x'>Easy (x2) notose/nanose</div>
                          <div id='sugarReward04x'>Moderate (x4) andose/ornose</div>
                          <div id='sugarReward08x'>Hard (x8) orose/antose</div>
                          <div id='sugarReward16x'>Very Hard (x16) norose/xorose</div>
                          <div id='sugarReward32x'>Brutal (x32) equose</div>

*/

/************************* Sugar controls layout in 'deails' of detail/summary for each task-sugar in sugar according */

.initialHiDclass { grid-area: initialHi;}
.initialLoDclass { grid-area: initialLo;}

.inflowHiDclass { grid-area: inflowHi; }
.inflowLoDclass { grid-area: inflowLo; }

.outflowHiDclass { grid-area: outflowHi; }
.outflowLoDclass { grid-area: outflowLo; }

.chmstatHiDclass { grid-area: chmstatHi; }
.chmstatLoDclass { grid-area: chmstatLo; }

.sideTitleHiDclass { grid-area: sideTitleHi; }
.sideTitleLoDclass { grid-area: sideTitleLo; }

.sideNclass { grid-area: sideInput; }
.supplyTypeNclass { grid-area: supplyType; }

.subSectionTitle { grid-area: subSectionTitle; }
.sgrBlank { grid-area: sgrBlank; }

.periodCheckDiv { grid-area: periodCheckDiv; }
.periodTimeClass { grid-area: periodTime; }

.gradientCheckDiv { grid-area: gradientCheckDiv; }
.diffuseCheckDiv { grid-area: diffuseCheckDiv; }

.grid-sugarDetail-Infinite-container {
  display: grid;
  grid-template-areas: 'subSectionTitle supplyType sgrBlank';
  width: 100%;
}

.grid-sugarDetail-Infinite-container {
  display: none;
}

.grid-sugarDetail-Finite-noGrradientCheckbox-container {  //not in use
  display: grid;
  grid-template-areas: 'subSectionTitle supplyType initialHi';
  width: 100%;
}
.grid-sugarDetail-Finite-noGradientCheckboxOneLine-container {
  display: grid;
  grid-template-areas: 'subSectionTitle supplyType initialHi diffuseCheckDiv';
  width: 100%;
}
.grid-sugarDetail-Finite-noGradientCheckbox-container {
  display: grid;
  grid-template-areas: 'subSectionTitle supplyType diffuseCheckDiv'
                       'initialHi initialHi sgrBlank';
  /* border: 1px solid rgba(128, 128, 128, 0.5); */
  border: 1px solid #888;
  width: 100%;
  
}

.grid-sugarDetail-Finite-container {
  display: grid;
  grid-template-areas: 'subSectionTitle supplyType diffuseCheckDiv gradientCheckDiv'
                       'initialHi  initialHi initialHi initialHi';
  width: 100%;
}
.grid-sugarDetail-FiniteGradient-container {
  display: grid;
  grid-template-areas: 'subSectionTitle supplyType diffuseCheckDiv gradientCheckDiv'
                       'sideInput sideInput sideInput sideInput'
                       'initialHi  initialHi initialLo initialLo';
  width: 100%;
}

.grid-sugarDetail-FiniteGradient-container_md {
  display: grid;
  grid-template-areas: 'subSectionTitle supplyType diffuseCheckDiv'
                       'initialLo initialLo sideInput'
                       'initialHi  initialHi gradientCheckDiv';
  width: 100%;
}

.grid-sugarDetail-FiniteGradient-container_old {
  display: grid;
  grid-template-areas: 'subSectionTitle supplyType diffuseCheckDiv'
                       'sideInput sideInput sideInput gradientCheckDiv'
                       'initialHi initialHi initialLo initialLo';
  width: 100%;
}

.grid-sugarDetailAll-container {
  display: grid;
  grid-template-areas: 'subSectionTitle supplyType'
                       'sideInput sideInput'
                       'periodCheckDiv periodTime'
                       'gradientCheckDiv diffuseCheckDiv'
                       'sideTitleHi sideTitleLo'   
                       'initialHi initialLo'
                       'inflowHi inflowLo'
                       'outflowHi outflowLo'
                       'chmstatHi chmstatLo';
  width: 100%;
}
.grid-sugarDetail-globalsugarDetail-chemostat {
  display: grid;
  grid-template-areas: 'inflowHi periodCheckDiv'
                       'outflowHi chmstatHi';
  width: 100%;
}
.grid-sugarDetail-globalEqualPeriod-container {
  display: grid;
  grid-template-areas: 'inflowHi periodCheckDiv periodTime'
                       'outflowHi chmstatHi chmstatHi';
  width: 100%;
}
.grid-sugarDetail-None-container {
  display: grid;
  grid-template-areas: 'supplyType sgrBlank sgrBlank sgrBlank sgrBlank';
  width: 100%;
}

.grid-sugarDetail-chemostat-container {
  display: grid;
  grid-template-areas: 'subSectionTitle supplyType diffuseCheckDiv gradientCheckDiv'
                       'inflowHi inflowHi periodCheckDiv periodCheckDiv'
                       'outflowHi outflowHi chmstatHi chmstatHi';
  width: 100%;
}
.grid-sugarDetail-chemostatPeriod-container {
  display: grid;
  grid-template-areas: 'subSectionTitle supplyType diffuseCheckDiv gradientCheckDiv'
                       'inflowHi inflowHi periodCheckDiv periodTime'
                       'outflowHi outflowHi chmstatHi chmstatHi';
  width: 100%;
}

.grid-sugarDetail-chemostat-Gradient-container {
  display: grid;
  grid-template-areas: 'subSectionTitle supplyType diffuseCheckDiv gradientCheckDiv'
                       'sideInput sideInput sideInput      periodCheckDiv'
/*                     'sideTitleHi sideTitleLo'   */
                       'inflowHi inflowHi    inflowLo inflowLo'
                       'outflowHi outflowHi  outflowLo outflowLo'
                       'chmstatHi chmstatHi  chmstatLo chmstatLo';
  width: 100%;
  color: black;
}
.grid-sugarDetail-chemostatGradientPeriod-container {
  display: grid;
  grid-template-areas: 'subSectionTitle supplyType diffuseCheckDiv gradientCheckDiv'
                       'sideInput sideInput       periodTime periodCheckDiv'
/*                     'sideTitleHi sideTitleLo'   */
                       'inflowHi inflowHi    inflowLo inflowLo'
                       'outflowHi outflowHi  outflowLo outflowLo'
                       'chmstatHi chmstatHi  chmstatLo chmstatLo';
  width: 100%;
}
.grid-sugarDetail-Flow-container {
  display: grid;
  grid-template-areas: 'subSectionTitle supplyType'
                       'sideInput sideInput'
                       'inflowHi outflowHi';
  width: 100%;
}
.grid-sugarDetail-item{
  background: rgba(128, 128, 128, 0.2);    
  border: 1px solid rgba(128, 128, 128, 0.3);
  text-align: left;
  padding: 1px 1px;
  min-height: 22px;
}
.sugarTitle{
  width: 57px;
  font-size: 110%;
  font-weight: bold;
  display: inline-block;
}

.subSectionTitle{
  text-align: left;
  font-weight: bold;
  font-size: 100%;
  //color: black;
}

.sideTitleHi{
  display: block;
  text-align: center;
  font-weight: bold;
  color: #666;
}
.sideTitleLo{
  display: block;
  text-align: center;
  font-weight: bold;
  color: #666;   /* a nice dark grey for bold text that should not be as prominiate as black bold text */
}

/*********************************************************************** End Sugar Accordion using details and select */

/********************************************************************************* End Custom Select/Options DropDown */
/* Custon Select/Options to make grey drop down */
/* ---------------------------------------------------------------------------------------------- website not used -----
/* -------------------- Select Box Styles: bavotasan.com Method (with special adaptations by ericrasch.com) */
/* -------------------- Source: http://bavotasan.com/2011/style-select-box-using-only-css/ */
/* play with select/option here https://codepen.io/dblackwood/pen/KjbGXo 
/*
/* I wish I wrote down what I did to make sure the box was wide enough to hold the text for all the options.
/*
/* Style a Select Box Using Only CSS. Inspired by: http://bavotasan.com/2011/style-select-box-using-only-css/
/* fork from https://codepen.io/ericrasch/pen/zjDBx

/* -------------------- Select Box Styles: danielneumann.com Method */
/* -------------------- Source: http://danielneumann.com/blog/how-to-style-dropdown-with-css-only/ */

/* -------------------- Select Box Styles: stackoverflow.com Method */
/* -------------------- Source: http://stackoverflow.com/a/5809186 */
/* ---------------------------------------------------------------------------------------------------------------------
/* Another useful site https://www.filamentgroup.com/lab/select-css.html
/* https://codepen.io/fabriceleven/pen/qOmNPG based on div around select

/* if select in a div then content: '\25BC'; can be used in the div class css
/* 
/* From  https://www.proy.info/style-select-dropdown-using-css/ */
/* body select.select_box option */ 

select {
/*  background: url("https://i.ibb.co/b7xjLrB/selectbox-arrow.png") right center no-repeat;  */
  height: 18px;
  border-bottom: 1px solid #aaa;      
  background: url('images/select_white_on_black_V_150x200.png') right center no-repeat;
  background-size:  auto 99%;    /* was 20 x 20 */
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  border-radius: 5px;
  margin: 0px 4px 0px 1px;     /* top right bottom left  */   /*top left/right bottom */ /*top/bottom  left/right */
  padding: 0px 2em 0px 2px;   /* top right bottom left  */  /* box padding border margin outside now */
}
select:hover{
  cursor: pointer;
  background: white;
  box-shadow:none;
}
select:hover::after {
  background:  #0f0;  /*can't tell that this does anything'*/
}

select:focus{
  background: white;  /*changes background off all the options not the one highlighted */
}

select:option { 
    padding: 0px 2px;    /*top/bottom  left/right  */
    background: #eee;
} 
/* for IE and Edge */ 
select::-ms-expand { 
    display: none; 
} 
select:disabled::-ms-expand { 
    background: #fff; 
}

  .toggleLftButton {
    border-radius: 5px 0px 0px 5px;                  /* top-left, top-right, bottom-right, bottom-left */
    height: 18px;
    padding: 1px 4px 3px 4px;  /* top right bottom left */
  }

  .toggleRitButton {
    border-radius: 0px 5px 5px 0px;                  /* top-left, top-right, bottom-right, bottom-left */
    height: 18px;
    padding: 1px 4px 3px 4px;  /* top right bottom left */
    background: inherit;
  }
  .activeBtn {
    background: #ccc;
  }

/* Checkbox next */

input[type="checkbox"] {
  box-shadow:none !important;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: 1px solid black;
  border-radius: 50%;
  background: white;
  margin: 0px 2px;
  width: 1em;
  height: 1em;
  box-shadow:none;
}
input[type="checkbox"]:checked {
  background: white;
  border: 4px solid black;
  box-shadow:none;
}
checkbox:focus {
  box-shadow:none;
}

/********************************************************************************* End Custom Select/Options DropDown */

/************************************************************************ used in examples will be deleted eventually */

.ex1oddSugarPart{
  border-top: 1px solid #888;
  background: rgba(128, 128, 128, 0.2);  /*LtSteelBlue=b0cedE=176, 196, 180 */
}  /*#89a9d9;*/
.ex1evenSugar{ 
  background: rgba(128, 128, 128, 0.4);  /*228, 241, 254, */
  border-top: 1px solid #888;
}

.ex1sugarAccordionSection{
  border-bottom: 1px solid #222;   /* #000 is black  */
}

.ex1sugarSummary{
  background: rgba(128, 128, 128, 0.1);  
  height: 22px;
}

.ex1sugarTitle{
  font-size: 110%;
  font-weight: bolder;
}
.ex1dishPartLabel{
  font-size: 100%;
  font-weight: bold;
  color: #444;
}

#ex1notSection{
  background: rgba(255,153,178, 1);  /* bigger number is closer to white; 0,0,0 is black*/
}
#ex1nanSection{
  background: rgba(255,204,153, 1);
}
#ex1andSection{
  background: rgba(255,255,153, 1);
}
#ex1ornSection{
  background: rgba(153,255,153, 1);
}
#ex1oroSection{
  background: rgba(153,255,153, 1);
}
#ex1antSection{
  background: rgba(153,255,153, 1);
}
#ex1norSection{
  background: rgba(153,255,153, 1);
}
#ex1xorSection{
  background: rgba(153,255,153, 1);
}
#ex1equSection{
  background: rgba(153,255,153, 1);
}

/*Organism Block css */
.orgBenchTopRow{
    border: 1px solid #AAA;
    flex:0 1 30px;    /* describes this as element in a bigger flex box */
    overflow: auto;
    display: flex;    /* makes this a flexbox to hold smaller elements */
    flex-direction: row;
  }
  .orgTopLt{
    flex: 1;                 /* fills remaining space; {flex:1 1 auto;} is the same as {}flex:1;} both prevent resize */
    display: flex;
    flex-direction: row;
    background: #F5F5F5; /* linen; */
  }
  #activeOrgan{
    background: #F5F5F5; /* lawngreen; */
    border: 1px solid #AAA;
    width: 90%;
  }
  .orgTopRt{
    flex: 0 1 200px;
    background: #F5F5F5; /* paleturquoise; */
  }
  .orgMid {
    border: 1px solid #AAA;
    flex: 1;                 /* fills remaining space; {flex:1 1 auto;} is the same as {}flex:1;} both prevent resize */
  }
  .orgBot {
    flex: 0 1 40px;
    border: 1px solid #AAA;
  }
  #cycleSlider{
    background: #F5F5F5; /* mediumpurple; */
  }
  .orgCycleClass{
    width: 3em; 
    height: 1.6em;
  }
  .orgDetailClass{
    width: 100%;     
  }
  .orgSettingClass{
    width: 100%;     
  }
  
  #orgTaskDataDiv {
    background:#DDD;    
  }
  #InstructionDetail {
    min-width: 1px;
    width: 100%; 
    height: auto;
  }
  .orgStatCanvas15{
    width: 162px; 
    height: 17px; 
    border:1px solid #000000;
  }
  .orgStatCanvas10{
    width: 162px; 
    height: 12px; 
    border:1px solid #000000;
  }
  .orgStatCanvas5{
    width: 162px; 
    height:  7px; 
    border:1px solid #000000;
  }
  .instructionText{
    height: 50px; 
    width: 100%;
    type: text;
  }
  
  #orgMuteSlide {
  width:200px; 
  display: block; 
  vertical-align: top; 
  margin-left:10px; 
  margin-right:20px
}
  #orgMuteInput{
    width: 50px; height:1em;
  }
  
  
  .analysisArea{
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
    background: #F5F5F5;  /*lightgray;  */
  }
  .anaTop{
    flex: 1;            /* does this fill the rest of the space like {flex:1} or {flex:1 1 auto;} ? */
    border: 1px solid #AAA;
  }
  #anlDndChart{
    width: 100%;
    height: 100%;
    background: #F5F5F5;  /*lavender;*/
  }
  .anaBot {
    flex: 0 1 75px;
    display: flex;
    flex-direction: row;
    /* justify-content: space-around; */
    border: 1px solid #AAA;
    background: #F5F5F5; /* #F5F5F5; /* peachpuff; */
  }
  
  /* the left side of the analysis controls at the bottom of analysis page */
  .analegend{
    flex: 0 1 50%;
    border: 1px solid #AAA;
    background: #F5F5F5;  /* #F5F5F5; /* seashell;  */
    min-width: 250px;
    display: grid;
    align-items: center;   /* up down */
    grid-template-columns: 35px 60px auto;
    grid-template-rows: 25px 25px 25px;
    grid-column-gap: 10px;
    /* grid-row-gap: 5px; */
    grid-template-areas: 'pop0delete pop0color popDish0'
                         'pop1delete pop1color popDish1'
                         'pop2delete pop2color popDish2';
  }
    #pop0deleteDiv { grid-area: pop0delete;}
    #pop1deleteDiv { grid-area: pop1delete;}
    #pop2deleteDiv { grid-area: pop2delete;}
    #pop0colorDiv { grid-area: pop0color;}
    #pop1colorDiv { grid-area: pop1color;}
    #pop2colorDiv { grid-area: pop2color;}
    #popDish0Div { grid-area: popDish0;}
    #popDish1Div { grid-area: popDish1;}
    #popDish2Div { grid-area: popDish2;}
    
    .anaDeleteButtonDiv{
      padding: 1px 4px;  /*top/bottom  left/right  */
    }
    .anaDeleteButton{
      margin: auto;
      height: 18px;
      position: absolute;
    };
    .anaColorLineDiv{
      padding: 2px 4px;  /*top/bottom  left/right  */
      width: 99%; 
      background: #F5F5F5;   /*lightblue; */
    }
    /* holdes color select/option structure */
    .anaColorLine{
      height: 17px;
      min-width: 50px;
      margin: auto;
    }
    .popDishHolder{  
      padding 3px;
      background: #F5F5F5;  /*lemonchiffon; */
    }
    /* insdie popDishHolder */
    .popDishClass {
      min-height: 1.6em;
      padding: 5px;
      margin: 2px;
      border: 1px solid #CCCCCC;
      display: block;
      overflow: visible;
    }

  .anaYaxis{
    flex: 0 1 50%;       /* need a way to put drop down description on another line if screen is narrow */
    min-width: 350px;
    background: #F5F5F5;/* #F5F5F5; /* pink ;  */
    margin: 10px 2px 5px 10px;    /* top right bottom left */
  }
  
/**********************************************************************************************************************/
/* the class model is used to create dialog boxes without dojo                                                        */
/**********************************************************************************************************************/
/* https://www.w3schools.com/howto/howto_css_modals.asp                                                               */
/* https://www.w3schools.com/howto/tryit.asp?filename=tryhow_css_modal                                                */
/* 
/* The Modal (background) */
.modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    padding-top: 100px; /* Location of the box */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background: rgb(0,0,0); /* Fallback color */
    background: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Content */
.modal-content {
    background: #fefefe;
    margin: auto;
    padding: 0px;
    border: 1px solid #888;
    width: 80%;
}

.modal-header {
    padding: 8px 8px;
    font-size: 130%;
    font-weight: bold;
    background: lightgray;
    color: black;
}

.modal-body {padding: 8px 8px;}

.modal-footer {
    padding: 8px 8px;
    background: lightgray;
    color: black;
}
/************************************************************************************************* end of model class */                                                                         */

/*************************************************************************************************** no longer in use */

/// Not in use, but could be useful
  /* from https://www.bestcssbuttongenerator.com/#/17 */
  .fancyButton {
    -moz-box-shadow: 5px 4px 7px 0px #899599;
    -webkit-box-shadow: 5px 4px 7px 0px #899599;
    box-shadow: 5px 4px 7px 0px #899599;
    background:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #ededed), color-stop(1, #bab1ba));
    background:-moz-linear-gradient(top, #ededed 5%, #bab1ba 100%);
    background:-webkit-linear-gradient(top, #ededed 5%, #bab1ba 100%);
    background:-o-linear-gradient(top, #ededed 5%, #bab1ba 100%);
    background:-ms-linear-gradient(top, #ededed 5%, #bab1ba 100%);
    background:linear-gradient(to bottom, #ededed 5%, #bab1ba 100%);
    filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ededed', endColorstr='#bab1ba',GradientType=0);
    background:#ededed;
    -moz-border-radius:6px;
    -webkit-border-radius:6px;
    border-radius:6px;
    border:1px solid #d6bcd6;
    display:inline-block;
    cursor:pointer;
    color:black;
    font-family:Arial;
    font-size:12px;
    padding:4px 8px;
    text-decoration:none;
  }
  .fancyButton:hover {
    background:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #bab1ba), color-stop(1, #ededed));
    background:-moz-linear-gradient(top, #bab1ba 5%, #ededed 100%);
    background:-webkit-linear-gradient(top, #bab1ba 5%, #ededed 100%);
    background:-o-linear-gradient(top, #bab1ba 5%, #ededed 100%);
    background:-ms-linear-gradient(top, #bab1ba 5%, #ededed 100%);
    background:linear-gradient(to bottom, #bab1ba 5%, #ededed 100%);
    filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#bab1ba', endColorstr='#ededed',GradientType=0);
    background:#bab1ba;
  }

  
  /*---------------------------------------------------------------------------------------------------- Not in use --*/
  
    /*contains navigation column and pages (population, Organsims, Analysis)         No longer in use*/
  .mainRowContainer { 
    flex: 1 1 auto;          /* fills remaining space; {flex:1 1 auto;} is the same as {}flex:1;} both prevent resize */
    display: grid;
    grid-template-areas: 'navColClass mainBlockHolder';
    justify-items: stretch;
    width: 100%;
    height: 100%;
    background: #F5F5F5; /* red; */
    overflow:scroll;
  }
