#
# Dish size = 30 x 30; with default diffusion (which xdiffuse = ydiffuse = 1)

RESOURCE not1:geometry=grid:initial=900:inflow=0:outflow=0.0:cellbox=0,0,30,30:\
inflowX1=0:inflowY1=0:inflowX2=29:inflowY2=29:outflowX1=0:outflowY1=0:outflowX2=29:outflowY2=29

RESOURCE nan1:geometry=grid:initial=900:inflow=0:outflow=0.0:cellbox=0,0,30,30:\
inflowX1=0:inflowY1=0:inflowX2=29:inflowY2=29:outflowX1=0:outflowY1=0:outflowX2=29:outflowY2=29

RESOURCE and1:geometry=grid:initial=900:inflow=0:outflow=0.0:cellbox=0,0,30,30:\
inflowX1=0:inflowY1=0:inflowX2=29:inflowY2=29:outflowX1=0:outflowY1=0:outflowX2=29:outflowY2=29

RESOURCE orn1:geometry=grid:initial=900:inflow=0:outflow=0.0:cellbox=0,0,30,30:\
inflowX1=0:inflowY1=0:inflowX2=29:inflowY2=29:outflowX1=0:outflowY1=0:outflowX2=29:outflowY2=29

REACTION  NOT  not  process:resource=not1:value=1.0:type=pow:depletable=0 requisite:max_count=1  
REACTION  NAND nand process:resource=nan1:value=1.0:type=pow:depletable=0  requisite:max_count=1    
REACTION  AND  and  process:resource=and1:value=2.0:type=pow:depletable=0 requisite:max_count=1  
REACTION  ORN  orn  process:resource=orn1:value=2.0:type=pow:depletable=0  requisite:max_count=1    


RESOURCE oro1:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=1.0:inflow=30.0:ygravity=0.5:\
inflowX1=0:inflowY1=10:inflowX2=29:inflowY2=10:outflowX1=0:outflowY1=29:outflowX2=29:outflowY2=29

RESOURCE ant1:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=1.0:inflow=60.0:ygravity=0.5:\
inflowX1=0:inflowY1=10:inflowX2=29:inflowY2=10:outflowX1=0:outflowY1=29:outflowX2=29:outflowY2=29

REACTION   OR   or process:resource=oro1:value=3.0:type=pow:max=1:min=0.5  requisite:max_count=1
REACTION ANDN andn process:resource=ant1:value=3.0:type=pow:max=1:min=0.5  requisite:max_count=1

# Old way to specify infinite resources. I think these can still be used as long as 
# there are no spatial resources for that function
# format on the next line
#REACTION  reaction_name  task[:argument:...]  [process:...]  [requisite:...]
# the task is in lower case. For Avida-ED we use a value of 0.0 for no reward 
# and a set value is rewarded based on task difficulty. Those are at the end.

#REACTION NOT  not  process:value=0.0:type=pow requisite:max_count=1  #value=1.0
#REACTION NAND nand process:value=0.0:type=pow requisite:max_count=1  #value=1.0  
#REACTION AND  and  process:value=0.0:type=pow requisite:max_count=1  #value=2.0
#REACTION ORN  orn  process:value=0.0:type=pow requisite:max_count=1  #value=2.0
#REACTION OR   or   process:value=0.0:type=pow requisite:max_count=1  #value=3.0
#REACTION ANDN andn process:value=0.0:type=pow requisite:max_count=1  #value=3.0
REACTION NOR  nor  process:value=0.0:type=pow requisite:max_count=1  #value=4.0
REACTION XOR  xor  process:value=0.0:type=pow requisite:max_count=1  #value=4.0
REACTION EQU  equ  process:value=0.0:type=pow requisite:max_count=1  #value=5.0

