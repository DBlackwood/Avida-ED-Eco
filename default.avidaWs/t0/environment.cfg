# Help and Instructions for using environment.cfg files and the Test Setup Page. 
#
# The buttons on the test setup page work, but I do NOT recommend changing the 
# test dish size on a given example as all the input(x & y), output(x & y) and cellbox
# values would need to change. 
#
# A plain text version of this file is environment.cfg of the "Instructions" test dish. 
#
# ========================================================================================
# Formating
#
# The "#" sign is a comment for that line and avida will ignore the rest of the line.
# The pattern of white space and colons must be followed 
#   or avida cannot read the file. 
#
# the "\" is a line continuation character. 
# Do not add a hard return in a data line without the \ character at the end, 
# Do not add spaces unless there is already white space there. 
#
# extra blank lines are fine. 
#
# ========================================================================================
# About RESOURCES 
#
# more details are about Avida Environment files is at 
#    https://github.com/devosoft/avida/wiki/Environment-file
#
# There must be at least one REACTION for each of the 9 tasks that Avida-ED uses,
#    even if there is no reward.
# A logic-9 function can have more than one resource/reaction. 
#
# Feel free to edit the values for 
#   inflow:  this is the total amount of the resource, 
#            so the inflow per cell = inflow area of the inflow 
#            as defined by inflowx1, inflowx2, inflowy1, inflowy2
#   outflow: this the fraction (0.0 and 1.0) of the resource that flows out of each cell
#            in the area as defined by outflowx1, outflowx2, outflowy1, outflowy2
#            
#   xgravity or ygravity: range -1.0 to 1.0; how fast the resource flows in that direction. 
#                         The movement is only dependent on the amount in the given cell.
#                         There is only flow in one direction, up, down, left or right or
#                         a diagonal from the combination of x and y gravity.
#   xdiffuse or ydiffuse: range 0.0 to 1.0; how fast the resource diffuses where the flow
#                         depends on the amount in adjacent cells. 
#   for both gravity or diffusion when limited to horizontal flow, in avida, there is still
#      some flow to the diagonal cells. For instance, if the flow is down, most some flows
#      into the cells in each diagonal direction as they are still below the source cell. 
#
# Default values
#   inflow = outflow = 0.0
#   xgravity = ygravity = 0.0
#   xdiffuse = ydiffuse = 1
# 
# Most formating errors will cause avida to stop. The program will probably need to be reloaded. 
#
# In each example file, I tried to only vary two parameters
#
# If you change inflowX1, inFlowX2, inflowY1, inflowY2, outflowX1, outflowX2, outflowY1,
# outflowY2 or the cellbox values be sure the coordinates stay in the dish size.
#
# cellbox=0,20,20,20 where the first two numbers are the coordinates of the upper left
#         corner of the box. The last two numbers are the box size. Row and column numbers
#         in Avida start with 0. Cell box contains the resource in that boxed area. The 
#         cell box and the inputx and y, & outputx and y values much match. Without cellbox
#         the resources could cross subdish areas if diffusion and or gravity is active. 
#
# cellbox keeps the resources in their own subdish.
#
# ========================================================================================
# Basic Examples of Difference statements. 
#----------------------------------------------------------------------------------
# Old way to specify infinite resources, or resources that are not rewarded. 
# I'm using this any time tasks are not rewarded as they still need to be defined.
#
# format on the next line
# REACTION  reaction_name  task[:argument:...]  [process:...]  [requisite:...]
# the task is in lower case. For Avida-ED we use a value of 0.0 for no reward 
# and a set value is rewarded based on task difficulty. Those values are at the end.
# the types is pow for power and means that the "reward" is multiplied by 2 raised to 
# power of the value and that leads to the x2, x4, x8, x16 and x32.
# max_count=1 means Avida-ED only rewards an organism for performing a logic function once. 
# these REACTIONs do not require a resournce.
#
# REACTION  NOT  not process:value=0.0:type=pow requisite:max_count=1  #value=1.0
# REACTION NAND nand process:value=0.0:type=pow requisite:max_count=1  #value=1.0  
# REACTION  AND  and process:value=0.0:type=pow requisite:max_count=1  #value=2.0
# REACTION  ORN  orn process:value=0.0:type=pow requisite:max_count=1  #value=2.0
# REACTION   OR   or process:value=0.0:type=pow requisite:max_count=1  #value=3.0
# REACTION ANDN andn process:value=0.0:type=pow requisite:max_count=1  #value=3.0
# REACTION  NOR  nor process:value=0.0:type=pow requisite:max_count=1  #value=4.0
# REACTION  XOR  xor process:value=0.0:type=pow requisite:max_count=1  #value=4.0
# REACTION  EQU  equ process:value=0.0:type=pow requisite:max_count=1  #value=5.0
#
#----------------------------------------------------------------------------------
# Example infinite resources in 40x40 dish the way I have to parse anyway.
#  two global examples. 
# ----------------------------------------------------------------------------------------
# in this case initial is the amount of resource in one cell. 
# cells are references as a linear array from cell 0 to cell n-1 
#   where n is the number of cells in the dish   
# Example infinite resources in 40x40 dish using CELL which otherwise I need not parse
# The number after the .. is the number of cells in the dish - 1, as we start counting at 0. 
# The avida world can also be represented as a one dimensional array from 0 to worldsize-1.
#CELL not0:0..1599:initial=1   #does the same as theline below, but does not parse in avida-Ed yet.
# ----------------------------------------------------------------------------------------
#
# call grid=local rather than spatial. 
# impliment 'local' 'finite' first.
#
# ----------------------------------------------------------------------------------------
RESOURCE not0:geometry=global:initial=1600

REACTION not0 not process:resource=not0:value=1.0:type=pow requisite:max_count=1

# this REACTION specifies a resource and making depletable=0 means it does not consume the
# resource and so acts like the resource is infinite. In this case, initial is all of the 
# resource spread out in all the cells and needs to be the number of cells in the dish 
# 
# This is the old way, where a resource was not defined, but acted like it was infinite
#
REACTION nan nand process:value=1.0:type=pow requisite:max_count=1  #value=1.0  
#
# 
#----------------------------------------------------------------------------------
# Examples with limited spatial resources and reactions with the whole dish. 
#----------------------------------------------------------------------------------
#
# finite resources
#
#!and0:supply=finite:gradient=false
RESOURCE and0:geometry=grid:initial=160000:\
inflowX1=0:inflowY1=0:inflowX2=39:inflowY2=39:\
outflowX1=0:outflowY1=0:outflowX2=39:outflowY2=39

REACTION and0 and process:resource=and0:value=2.0:type=pow:max=1.1:min=0.9  requisite:max_count=1

# min is the minimum amount of the resource, and1, that can be consumed. If the cell contains
# less than 0.5 units, nothing is consumed. max is the maximum amount that is consumed. I 
# think that with our "infinite" resources they are rewarded as if they consumed 1 unit of
# resource. You might wish to experiment with different values for min. I have generally
# used between 0.5 and 0.9 for min and 1 or 1.1 for max. 

# Here is an equilibrium example, with no diffusion

#!orn0:supply=equilibrium:gradient=false
RESOURCE orn0:geometry=grid:ydiffuse=0.0:outflow=0.0004:inflow=20:xdiffuse=0:\
inflowX1=0:inflowY1=0:inflowX2=39:inflowY2=39:\
outflowX1=0:outflowY1=0:outflowX2=39:outflowY2=39

REACTION orn0 orn process:resource=orn0:value=2.0:type=pow:max=1:min=0.99  requisite:max_count=1

#----------------------------------------------------------------------------------
# Examples with limited spatial resources and reactions in quarters of the dish
#----------------------------------------------------------------------------------
#
# with diffusion from 4ths_solid-diffusion
# inflow all of subdish; out flow all subdish
# the smaller the outflow, the longer to reach equilibrium
# input it total input; to get input/cell = input / # input cells
# equilibrium = (input/cell) / output

#upper left
#!oro1:supply=equilibrium:gradient=false
RESOURCE oro1:geometry=grid:xdiffuse=1:ydiffuse=1:inflow=20:outflow=0.0025:\
inflowX1=0:inflowY1=0:inflowX2=19:inflowY2=19:cellbox=0,0,20,20:\
outflowX1=0:outflowY1=0:outflowX2=19:outflowY2=19
#@1000 updates has not yet reached equilibrium = 18.36
#@2000 updates has not yet reached equilibrium = 19.87
#@3000 updates has not yet reached equilibrium = 19.99
#@4000 updates has reached equilibrium to two digits

#upper right
#!oro2:supply=equilibrium:gradient=false
RESOURCE oro2:geometry=grid:xdiffuse=1:ydiffuse=1:inflow=40:outflow=0.005:\
inflowX1=20:inflowY1=0:inflowX2=39:inflowY2=19:cellbox=20,0,20,20:\
outflowX1=20:outflowY1=0:outflowX2=39:outflowY2=19
#@1000 updates has not yet reached equilibrium = 19.87
#@2000 updates has reached equilibrium to two digits

#lower left
#!oro3:supply=finite:gradient=false
RESOURCE oro3:geometry=grid:xdiffuse=1:ydiffuse=1:initial=4000:\
inflowX1=0:inflowY1=20:inflowX2=19:inflowY2=39:cellbox=0,20,20,20:\
outflowX1=0:outflowY1=20:outflowX2=19:outflowY2=39

#lower right
#!oro4:supply=equilibrium:gradient=false
RESOURCE oro4:geometry=grid:xdiffuse=1:ydiffuse=1:inflow=160:outflow=0.02:\
inflowX1=20:inflowY1=20:inflowX2=39:inflowY2=39:cellbox=20,20,20,20:\
outflowX1=20:outflowY1=20:outflowX2=39:outflowY2=39

REACTION oro1 or  process:resource=oro1:value=3.0:type=pow:min=0.9:max=1 requisite:max_count=1
REACTION oro2 or  process:resource=oro2:value=3.0:type=pow:min=0.9:max=1 requisite:max_count=1
REACTION oro3 or  process:resource=oro3:value=3.0:type=pow:min=0.9:max=1 requisite:max_count=1
REACTION oro4 or  process:resource=oro4:value=3.0:type=pow:min=0.9:max=1 requisite:max_count=1

#----------------------------------------------------------------------------------
# from 4ths_solid-NO-diffusion
# inflow all of subdish; out flow everywhere; NO diffusion
# the smaller the outflow, the longer to reach equilibrium
# input it total input; to get input/cell = input / # input cells
# equilibrium = (input/cell) / output

#!ant1:supply=equilibrium:gradient=false
RESOURCE ant1:geometry=grid:xdiffuse=0:ydiffuse=0:inflow=2000:outflow=0.005:\
inflowX1=0:inflowY1=0:inflowX2=19:inflowY2=19:cellbox=0,0,20,20:\
outflowX1=0:outflowY1=0:outflowX2=19:outflowY2=19

#!ant2:supply=equilibrium:gradient=false
RESOURCE ant2:geometry=grid:xdiffuse=0:ydiffuse=0:inflow=4800:outflow=0.01:\
inflowX1=20:inflowY1=0:inflowX2=39:inflowY2=19:cellbox=20,0,20,20:\
outflowX1=20:outflowY1=0:outflowX2=39:outflowY2=19

#!ant3:supply=flow:gradient=false:side=center
RESOURCE ant3cen:geometry=grid:xdiffuse=1:ydiffuse=1:inflow=2400:outflow=0.0.008:\
inflowX1=5:inflowY1=25:inflowX2=14:inflowY2=34:cellbox=0,20,20,20:\
outflowX1=0:outflowY1=20:outflowX2=19:outflowY2=39

#!ant4:supply=equilibrium:gradient=false
RESOURCE ant4:geometry=grid:xdiffuse=1:ydiffuse=1:inflow=19600:outflow=0.04:\
inflowX1=20:inflowY1=20:inflowX2=39:inflowY2=39:cellbox=20,20,20,20:\
outflowX1=20:outflowY1=20:outflowX2=39:outflowY2=39

REACTION ant1 andn process:resource=ant1:value=3.0:type=pow:min=0.9:max=1 requisite:max_count=1
REACTION ant2 andn process:resource=ant2:value=3.0:type=pow:min=0.9:max=1 requisite:max_count=1
REACTION ant3 andn process:resource=ant3cen:value=3.0:type=pow:min=0.9:max=1 requisite:max_count=1
REACTION ant4 andn process:resource=ant4:value=3.0:type=pow:min=0.9:max=1 requisite:max_count=1

#----------------------------------------------------------------------------------
# Examples with limited spatial resources and reactions in halves 
#----------------------------------------------------------------------------------
#
#  gravity and periodic. left/right
# Diffusion must be set to zero in both directions to get only gravity because they default to 1

#left half
#!nor13:supply=flow:gradient=true:side=top
RESOURCE nor13top:geometry=grid:xdiffuse=0:outflow=1:inflow=10:xdiffuse=0:ygravity=0.5:\
inflowX1=0:inflowY1=0:inflowX2=19:inflowY2=0:cellbox=0,0,20,40:\
outflowX1=0:outflowY1=39:outflowX2=19:outflowY2=39
 
#right half
#!nor24:supply=flow:gradient=true:side=top
RESOURCE nor24top:geometry=grid:xdiffuse=0:outflow=0.001:inflow=10:xdiffuse=0:ygravity=1.0:\
inflowX1=20:inflowY1=0:inflowX2=39:inflowY2=0:cellbox=20,0,20,40:\
outflowX1=20:outflowY1=35:outflowX2=39:outflowY2=39

REACTION nor13 nor process:resource=nor13top:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1
REACTION nor24 nor process:resource=nor24top:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1

#----------------------------------------------------------------------------------
# this dish is 40x40;    Horizontal diffusion
# inflow at center; out flow entire right side.
# the goal is a gradient that reaches equilibrium. This does not yet exist. 

#upper half with a gradient
#!xor12:supply=equilibrium:gradient=true:side=bot  #not using the comment as I don't seem to need it.
RESOURCE xor12bot00:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=0.4:\
inflowX1=0:inflowY1=0:inflowX2=39:inflowY2=0:\
outflowX1=0:outflowY1=0:outflowX2=39:outflowY2=0
REACTION xor12bot00 xor process:resource=xor12bot00:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1
 
RESOURCE xor12bot01:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=0.8:\
inflowX1=0:inflowY1=1:inflowX2=39:inflowY2=1:\
outflowX1=0:outflowY1=1:outflowX2=39:outflowY2=1
REACTION xor12bot01 xor process:resource=xor12bot01:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1

RESOURCE xor12bot02:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=1.2:\
inflowX1=0:inflowY1=2:inflowX2=39:inflowY2=2:\
outflowX1=0:outflowY1=2:outflowX2=39:outflowY2=2
REACTION xor12bot02 xor process:resource=xor12bot02:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1
  
RESOURCE xor12bot03:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=1.6:\
inflowX1=0:inflowY1=3:inflowX2=39:inflowY2=3:\
outflowX1=0:outflowY1=3:outflowX2=39:outflowY2=3
REACTION xor12bot03 xor process:resource=xor12bot03:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1

RESOURCE xor12bot04:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=2.0:\
inflowX1=0:inflowY1=4:inflowX2=39:inflowY2=4:\
outflowX1=0:outflowY1=4:outflowX2=39:outflowY2=4
REACTION xor12bot04 xor process:resource=xor12bot04:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1

RESOURCE xor12bot05:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=2.4:\
inflowX1=0:inflowY1=5:inflowX2=39:inflowY2=5:\
outflowX1=0:outflowY1=5:outflowX2=39:outflowY2=5
REACTION xor12bot05 xor process:resource=xor12bot05:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1

RESOURCE xor12bot06:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=2.8:\
inflowX1=0:inflowY1=6:inflowX2=39:inflowY2=6:\
outflowX1=0:outflowY1=6:outflowX2=39:outflowY2=6
REACTION xor12bot06 xor process:resource=xor12bot06:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1
 
RESOURCE xor12bot07:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=3.2:\
inflowX1=0:inflowY1=7:inflowX2=39:inflowY2=7:\
outflowX1=0:outflowY1=7:outflowX2=39:outflowY2=7
REACTION xor12bot07 xor process:resource=xor12bot07:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1
 
RESOURCE xor12bot08:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=3.6:\
inflowX1=0:inflowY1=8:inflowX2=39:inflowY2=8:\
outflowX1=0:outflowY1=8:outflowX2=39:outflowY2=8
REACTION xor12bot08 xor process:resource=xor12bot08:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1
 
RESOURCE xor12bot09:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=4.0:\
inflowX1=0:inflowY1=9:inflowX2=39:inflowY2=9:\
outflowX1=0:outflowY1=9:outflowX2=39:outflowY2=9
REACTION xor12bot09 xor process:resource=xor12bot09:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1

RESOURCE xor12bot10:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=4.4:\
inflowX1=0:inflowY1=10:inflowX2=39:inflowY2=10:\
outflowX1=0:outflowY1=10:outflowX2=39:outflowY2=10
REACTION xor12bot10 xor process:resource=xor12bot10:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1
 
RESOURCE xor12bot11:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=4.8:\
inflowX1=0:inflowY1=11:inflowX2=39:inflowY2=11:\
outflowX1=0:outflowY1=11:outflowX2=39:outflowY2=11
REACTION xor12bot11 xor process:resource=xor12bot11:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1

RESOURCE xor12bot12:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=5.2:\
inflowX1=0:inflowY1=12:inflowX2=39:inflowY2=12:\
outflowX1=0:outflowY1=12:outflowX2=39:outflowY2=12
REACTION xor12bot12 xor process:resource=xor12bot12:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1
 
RESOURCE xor12bot13:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=5.6:\
inflowX1=0:inflowY1=13:inflowX2=39:inflowY2=13:\
outflowX1=0:outflowY1=13:outflowX2=39:outflowY2=13
REACTION xor12bot13 xor process:resource=xor12bot13:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1
 
RESOURCE xor12bot14:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=6:\
inflowX1=0:inflowY1=14:inflowX2=39:inflowY2=14:\
outflowX1=0:outflowY1=14:outflowX2=39:outflowY2=14
REACTION xor12bot14 xor process:resource=xor12bot14:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1
 
RESOURCE xor12bot15:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=6.4:\
inflowX1=0:inflowY1=15:inflowX2=39:inflowY2=15:\
outflowX1=0:outflowY1=15:outflowX2=39:outflowY2=15
REACTION xor12bot15 xor process:resource=xor12bot15:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1

RESOURCE xor12bot16:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=6.8:\
inflowX1=0:inflowY1=16:inflowX2=39:inflowY2=16:\
outflowX1=0:outflowY1=16:outflowX2=39:outflowY2=16
REACTION xor12bot16 xor process:resource=xor12bot16:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1

RESOURCE xor12bot17:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=7.2:\
inflowX1=0:inflowY1=17:inflowX2=39:inflowY2=17:\
outflowX1=0:outflowY1=17:outflowX2=39:outflowY2=17
REACTION xor12bot17 xor process:resource=xor12bot17:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1
 
RESOURCE xor12bot18:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=7.6:\
inflowX1=0:inflowY1=18:inflowX2=39:inflowY2=18:\
outflowX1=0:outflowY1=18:outflowX2=39:outflowY2=18
REACTION xor12bot18 xor process:resource=xor12bot18:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1
 
RESOURCE xor12bot19:geometry=grid:xdiffuse=0:ydiffuse=0:outflow=0.01:inflow=8:\
inflowX1=0:inflowY1=19:inflowX2=39:inflowY2=19:\
outflowX1=0:outflowY1=19:outflowX2=39:outflowY2=19
REACTION xor12bot19 xor process:resource=xor12bot19:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1
 
#lower half
#!xor12:supply=equilibrium:gradient=false
RESOURCE xor34:geometry=grid:xdiffuse=0:ydiffuse=1:outflow=0.001:inflow=24:\
inflowX1=0:inflowY1=20:inflowX2=39:inflowY2=39:cellbox=0,20,40,20:\
outflowX1=0:outflowY1=20:outflowX2=39:outflowY2=39
REACTION  xor34  xor process:resource=xor34:value=4.0:type=pow:min=0.9:max=1.1 requisite:max_count=1

#----------------------------------------------------------------------------------
# Example of old style none
#

REACTION  EQU  equ process:value=0.0:type=pow requisite:max_count=1  #value=5.0

#
#----------------------------------------------------------------------------------
#

# The displayed resources are the sum of all the resources in the dish. A cell could contain 
# more than one and# resource. None do in these examples because I used cellbox.
#
# ========================================================================================

