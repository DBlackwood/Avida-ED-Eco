# _Equilibrium-diffusion_lft-rit
# inflow all of subdish; out flow everywhere in subdish
# the smaller the outflow, the longer to reach equilibrium
# input it total input; to get input/cell = input / # input cells
# equilibrium = (input/cell) / output

REACTION not00 not process:value=1:type=pow  requisite:max_count=1

RESOURCE nan00:geometry=grid:initial=1600 
REACTION nan00 nand process:resource=nan00:value=1:type=pow:depletable=0 requisite:max_count=1 

RESOURCE and13q:geometry=grid:xdiffuse=0:ydiffuse=0:inflow=256:outflow=0.08:\
inflowX1=0:inflowY1=0:inflowX2=19:inflowY2=19:cellbox=0,0,20,20:\
outflowX1=0:outflowY1=0:outflowX2=19:outflowY2=19

RESOURCE and24q:geometry=grid:xdiffuse=0:ydiffuse=0:inflow=272:outflow=0.08:\
inflowX1=20:inflowY1=0:inflowX2=39:inflowY2=19:cellbox=20,0,20,20:\
outflowX1=20:outflowY1=0:outflowX2=39:outflowY2=19

REACTION  AND13q and  process:resource=and13q:value=2.0:type=pow:min=0.9:max=1 requisite:max_count=1
REACTION  AND24q and  process:resource=and24q:value=2.0:type=pow:min=0.9:max=1 requisite:max_count=1

RESOURCE orn1q:geometry=grid:xdiffuse=0:ydiffuse=0:inflow=224:outflow=0.07:\
inflowX1=0:inflowY1=0:inflowX2=19:inflowY2=19:cellbox=0,0,20,20:\
outflowX1=0:outflowY1=0:outflowX2=19:outflowY2=19

RESOURCE orn2q:geometry=grid:xdiffuse=0:ydiffuse=0:inflow=252:outflow=0.07:\
inflowX1=20:inflowY1=0:inflowX2=39:inflowY2=19:cellbox=20,0,20,20:\
outflowX1=20:outflowY1=0:outflowX2=39:outflowY2=19

REACTION  ORN13q orn  process:resource=orn13q:value=2.0:type=pow:min=0.9:max=1 requisite:max_count=1
REACTION  ORN24q orn  process:resource=orn24q:value=2.0:type=pow:min=0.9:max=1 requisite:max_count=1

RESOURCE oro13q:geometry=grid:xdiffuse=0:ydiffuse=0:inflow=192:outflow=0.06:\
inflowX1=0:inflowY1=0:inflowX2=19:inflowY2=19:cellbox=0,0,20,20:\
outflowX1=0:outflowY1=0:outflowX2=19:outflowY2=19

RESOURCE oro24q:geometry=grid:xdiffuse=0:ydiffuse=0:inflow=216:outflow=0.06:\
inflowX1=20:inflowY1=0:inflowX2=39:inflowY2=19:cellbox=20,0,20,20:\
outflowX1=20:outflowY1=0:outflowX2=39:outflowY2=19

REACTION  OR13q or process:resource=oro13q:value=1.0:type=pow:min=0.9:max=1 requisite:max_count=1
REACTION  OR24q  or process:resource=oro24q:value=1.0:type=pow:min=0.9:max=1 requisite:max_count=1

RESOURCE ant13q:geometry=grid:xdiffuse=0:ydiffuse=0:inflow=288:outflow=0.05:\
inflowX1=0:inflowY1=0:inflowX2=19:inflowY2=19:cellbox=0,0,20,20:\
outflowX1=0:outflowY1=0:outflowX2=19:outflowY2=19

RESOURCE ant24q:geometry=grid:xdiffuse=0:ydiffuse=0:inflow=306:outflow=0.05:\
inflowX1=20:inflowY1=0:inflowX2=39:inflowY2=19:cellbox=20,0,20,20:\
outflowX1=20:outflowY1=0:outflowX2=39:outflowY2=19

REACTION ANDN13q andn process:resource=ant1q:value=1.0:type=pow:min=0.9:max=1 requisite:max_count=1
REACTION ANDN24q andn process:resource=ant2q:value=1.0:type=pow:min=0.9:max=1 requisite:max_count=1

RESOURCE nor13q:geometry=grid:xdiffuse=0:ydiffuse=0:inflow=128:outflow=0.04:\
inflowX1=0:inflowY1=0:inflowX2=19:inflowY2=19:cellbox=0,0,20,20:\
outflowX1=0:outflowY1=0:outflowX2=19:outflowY2=19

RESOURCE nor24q:geometry=grid:xdiffuse=0:ydiffuse=0:inflow=144:outflow=0.04:\
inflowX1=20:inflowY1=0:inflowX2=39:inflowY2=19:cellbox=20,0,20,20:\
outflowX1=20:outflowY1=0:outflowX2=39:outflowY2=19

REACTION  NOR13q nor  process:resource=nor13q:value=2.0:type=pow:min=0.9:max=1 requisite:max_count=1
REACTION  NOR24q nor  process:resource=nor24q:value=2.0:type=pow:min=0.9:max=1 requisite:max_count=1

RESOURCE xor13q:geometry=grid:xdiffuse=0:ydiffuse=0:inflow=192:outflow=0.03:\
inflowX1=0:inflowY1=0:inflowX2=19:inflowY2=19:cellbox=0,0,20,20:\
outflowX1=0:outflowY1=0:outflowX2=19:outflowY2=19

REACTION  XOR13q xor  process:resource=xor13q:value=2.0:type=pow:min=0.9:max=1 requisite:max_count=1

RESOURCE xor00q:geometry=grid:initial=0 
REACTION xor00q xor process:resource=xor00:value=4:type=pow:max=1:min=1  requisite:max_count=1 

REACTION equ00q equ process:value=0:type=pow  requisite:max_count=1



# Old way to specify infinite resources. I think these can still be used as long as 
# there are no spatial resources for that function
# format on the next line
#REACTION  reaction_name  task[:argument:...]  [process:...]  [requisite:...]
# the task is in lower case. For Avida-ED we use a value of 0.0 for no reward 
# and a set value is rewarded based on task difficulty. Those are at the end.

#REACTION NOT  not  process:value=0.0:type=pow requisite:max_count=1  #value=1.0
#REACTION NAND nand process:value=0.0:type=pow requisite:max_count=1  #value=1.0  
#REACTION AND  and  process:value=0.0:type=pow requisite:max_count=1  #value=2.0
#REACTION ORN  orn  process:value=0.0:type=pow requisite:max_count=1  #value=2.0
#REACTION OR   or   process:value=0.0:type=pow requisite:max_count=1  #value=3.0
#REACTION ANDN andn process:value=0.0:type=pow requisite:max_count=1  #value=3.0
#REACTION NOR  nor  process:value=0.0:type=pow requisite:max_count=1  #value=4.0
#REACTION XOR  xor  process:value=0.0:type=pow requisite:max_count=1  #value=4.0
#REACTION EQU  equ  process:value=0.0:type=pow requisite:max_count=1  #value=5.0

